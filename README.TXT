------------------------------------------------------------------------
This is a class zoo project designed to play with abstract
classes and interfaces.

Your task is to implement two classes as follows

1) a type of animal, such as a Dog, Cat, Horse, etc

This first class must extend the Animal class, and implement
at least one of the interfaces (walk,fly,swim). It must also 
implement the abstract methods defined in the Animal class.

This class must also contain two constructors.  The default
constructor, with no parameters should call the super constructor
setting the species and description.  See the Bear's default constructor
as an example.  The second constructor should allow you to set, or pass through
parameters for species and description to the super constructor to set these
values. Again, see the bear example.

Both constructors should set a value for the animal's toy.

2) A specific subclass of the type you create in 1. For
instance, if you create a Dog in 1, create a Poodle, or
Husky, etc.

The main task / goal for creating this subclass is to 

  a) Create a default constructor that explicitly sets the 
  species and description of this subclass
  
  b) overides the superclasses interact method.
  
  See the CircusBear class for an example. Be creative with the
  overridden method. See if you can call the super fly, swim, and walk class.
  
  You may want to also set the toy for this subclass, and create unique instance
  variables and methods for this, or the parent class.
  
  Remember, we are making a zoo here.
  
  Finally, add any code that you would like to the AnimalTester class to exercise/test
  your animal.

  MAKE SURE TO PUT YOUR NAME,  PERIOD, AND VERSION ALONG WITH A DESCRIPTION INTO
  EACH CLASS FILE THAT YOU CREATE>
